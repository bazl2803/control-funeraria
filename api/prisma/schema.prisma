generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model client {
  id            Int       @id(map: "PK__client__3213E83F04B6D9AB") @default(autoincrement())
  created_at    DateTime  @db.DateTime
  modified_at   DateTime? @db.DateTime
  name          String    @db.NVarChar(255)
  doc_id        String    @db.VarChar(255)
  type          String    @db.NVarChar(255)
  job           String?   @db.NVarChar(255)
  incomes       Decimal?  @db.Decimal(18, 2)
  extension_day Int?
  status        String    @db.NVarChar(255)
  route_id      Int
  route_index   Int
  method        String    @db.NVarChar(255)
  phone_number  String?   @db.VarChar(20)
  email         String?   @db.NVarChar(255)
  route         route     @relation(fields: [route_id], references: [id], onUpdate: NoAction, map: "FK__client__route_id__02FC7413")
  policy        policy[]
}

model employee {
  id                                      Int       @id(map: "PK__employee__3213E83F9050231D") @default(autoincrement())
  name                                    String    @db.NVarChar(255)
  password                                String    @db.NVarChar(255)
  roleId                                  Int
  role                                    role      @relation(fields: [roleId], references: [id], onUpdate: NoAction, map: "FK__employee__roleId__5165187F")
  funeral_funeral_back_buddyIdToemployee  funeral[] @relation("funeral_back_buddyIdToemployee")
  funeral_funeral_back_driverIdToemployee funeral[] @relation("funeral_back_driverIdToemployee")
  funeral_funeral_go_buddyIdToemployee    funeral[] @relation("funeral_go_buddyIdToemployee")
  funeral_funeral_go_driverIdToemployee   funeral[] @relation("funeral_go_driverIdToemployee")
}

model funeral {
  id                                       Int             @id(map: "PK__funeral__3213E83F847E7944") @default(autoincrement())
  burial_date                              DateTime        @db.DateTime
  pickup_date                              DateTime        @db.Date
  entry_date                               DateTime?       @db.DateTime
  burial_address                           String          @db.NVarChar(Max)
  worship_address                          String          @db.NVarChar(Max)
  graveyard                                String          @db.NVarChar(Max)
  type                                     String          @db.NVarChar(50)
  go_driverId                              Int
  go_buddyId                               Int?
  go_vehicleId                             Int
  back_driverId                            Int
  back_buddyId                             Int?
  back_vehicleId                           Int
  employee_funeral_back_buddyIdToemployee  employee?       @relation("funeral_back_buddyIdToemployee", fields: [back_buddyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__funeral__back_bu__59063A47")
  employee_funeral_back_driverIdToemployee employee        @relation("funeral_back_driverIdToemployee", fields: [back_driverId], references: [id], onUpdate: NoAction, map: "FK__funeral__back_dr__5812160E")
  vehicle_funeral_back_vehicleIdTovehicle  vehicle         @relation("funeral_back_vehicleIdTovehicle", fields: [back_vehicleId], references: [id], onUpdate: NoAction, map: "FK__funeral__back_ve__571DF1D5")
  employee_funeral_go_buddyIdToemployee    employee?       @relation("funeral_go_buddyIdToemployee", fields: [go_buddyId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__funeral__go_budd__5629CD9C")
  employee_funeral_go_driverIdToemployee   employee        @relation("funeral_go_driverIdToemployee", fields: [go_driverId], references: [id], onUpdate: NoAction, map: "FK__funeral__go_driv__5535A963")
  vehicle_funeral_go_vehicleIdTovehicle    vehicle         @relation("funeral_go_vehicleIdTovehicle", fields: [go_vehicleId], references: [id], onUpdate: NoAction, map: "FK__funeral__go_vehi__5441852A")
  funeralDetail                            funeralDetail[]
  policy                                   policy[]
}

model funeralDetail {
  id        Int     @id(map: "PK__funeralD__3213E83FC807DBC1") @default(autoincrement())
  funeralId Int
  itemId    Int
  quantity  Int
  funeral   funeral @relation(fields: [funeralId], references: [id], onUpdate: NoAction, map: "FK__funeralDe__funer__5DCAEF64")
  item      item    @relation(fields: [itemId], references: [id], onUpdate: NoAction, map: "FK__funeralDe__itemI__5EBF139D")
}

model item {
  id            Int             @id(map: "PK__item__3213E83FCB5BD863") @default(autoincrement())
  name          String          @db.NVarChar(255)
  stock         Int
  funeralDetail funeralDetail[]
}

model payment {
  id            Int           @id(map: "PK__payment__3213E83F8174EDD3") @default(autoincrement())
  number        Int
  date          DateTime      @db.Date
  amount        Decimal       @db.Decimal(6, 2)
  methodId      Int
  policyId      Int
  paymentMethod paymentMethod @relation(fields: [methodId], references: [id], onUpdate: NoAction, map: "FK__payment__methodI__693CA210")
  policy        policy        @relation(fields: [policyId], references: [id], onUpdate: NoAction, map: "FK__payment__policyI__68487DD7")
}

model paymentMethod {
  id      Int       @id(map: "PK__paymentM__3213E83FD37E3734") @default(autoincrement())
  name    String    @db.NVarChar(50)
  bank    String?   @db.NVarChar(50)
  account String?   @db.NVarChar(20)
  payment payment[]
}

model policy {
  id        Int       @id(map: "PK__policy__3213E83F65F3540F") @default(autoincrement())
  clientId  Int
  serviceId Int
  funeralId Int?
  balance   Decimal   @db.Decimal(6, 2)
  payment   payment[]
  client    client    @relation(fields: [clientId], references: [id], onUpdate: NoAction, map: "FK__policy__clientId__619B8048")
  funeral   funeral?  @relation(fields: [funeralId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK__policy__funeralI__6383C8BA")
  service   service   @relation(fields: [serviceId], references: [id], onUpdate: NoAction, map: "FK__policy__serviceI__628FA481")
}

model role {
  id       Int        @id(map: "PK__role__3213E83F00E83D0C") @default(autoincrement())
  name     String     @db.NVarChar(50)
  employee employee[]
}

model route {
  id       Int      @id(map: "PK__route__3213E83F25FAF10A") @default(autoincrement())
  name     String   @db.NVarChar(25)
  location String   @db.NVarChar(25)
  payday   Int
  client   client[]
}

model routeDetail {
  id       Int @id(map: "PK__routeDet__3213E83FD65A96B8") @default(autoincrement())
  routeId  Int
  clientId Int
}

model service {
  id     Int      @id(map: "PK__service__3213E83F3B8E2EAD") @default(autoincrement())
  name   String   @db.NVarChar(100)
  price  Decimal  @db.Decimal(6, 2)
  prime  Decimal  @db.Decimal(6, 2)
  fee    Decimal  @db.Decimal(6, 2)
  policy policy[]
}

model vehicle {
  id                                      Int       @id(map: "PK__vehicle__3213E83F67EE104F") @default(autoincrement())
  name                                    String    @db.NVarChar(100)
  plate                                   String    @db.NVarChar(50)
  funeral_funeral_back_vehicleIdTovehicle funeral[] @relation("funeral_back_vehicleIdTovehicle")
  funeral_funeral_go_vehicleIdTovehicle   funeral[] @relation("funeral_go_vehicleIdTovehicle")
}
